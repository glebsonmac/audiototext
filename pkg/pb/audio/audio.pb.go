// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: api/proto/audio/audio.proto

package audio

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioFormat int32

const (
	AudioFormat_AUDIO_FORMAT_UNSPECIFIED AudioFormat = 0
	AudioFormat_AUDIO_FORMAT_WAV         AudioFormat = 1
	AudioFormat_AUDIO_FORMAT_MP3         AudioFormat = 2
	AudioFormat_AUDIO_FORMAT_FLAC        AudioFormat = 3
	AudioFormat_AUDIO_FORMAT_OGG         AudioFormat = 4
)

// Enum value maps for AudioFormat.
var (
	AudioFormat_name = map[int32]string{
		0: "AUDIO_FORMAT_UNSPECIFIED",
		1: "AUDIO_FORMAT_WAV",
		2: "AUDIO_FORMAT_MP3",
		3: "AUDIO_FORMAT_FLAC",
		4: "AUDIO_FORMAT_OGG",
	}
	AudioFormat_value = map[string]int32{
		"AUDIO_FORMAT_UNSPECIFIED": 0,
		"AUDIO_FORMAT_WAV":         1,
		"AUDIO_FORMAT_MP3":         2,
		"AUDIO_FORMAT_FLAC":        3,
		"AUDIO_FORMAT_OGG":         4,
	}
)

func (x AudioFormat) Enum() *AudioFormat {
	p := new(AudioFormat)
	*p = x
	return p
}

func (x AudioFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_audio_audio_proto_enumTypes[0].Descriptor()
}

func (AudioFormat) Type() protoreflect.EnumType {
	return &file_api_proto_audio_audio_proto_enumTypes[0]
}

func (x AudioFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioFormat.Descriptor instead.
func (AudioFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_audio_audio_proto_rawDescGZIP(), []int{0}
}

type TranscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioData     []byte                 `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	AudioFormat   AudioFormat            `protobuf:"varint,2,opt,name=audio_format,json=audioFormat,proto3,enum=audio.AudioFormat" json:"audio_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeRequest) Reset() {
	*x = TranscribeRequest{}
	mi := &file_api_proto_audio_audio_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeRequest) ProtoMessage() {}

func (x *TranscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_audio_audio_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeRequest.ProtoReflect.Descriptor instead.
func (*TranscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_audio_audio_proto_rawDescGZIP(), []int{0}
}

func (x *TranscribeRequest) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *TranscribeRequest) GetAudioFormat() AudioFormat {
	if x != nil {
		return x.AudioFormat
	}
	return AudioFormat_AUDIO_FORMAT_UNSPECIFIED
}

type TranscribeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transcript    string                 `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeResponse) Reset() {
	*x = TranscribeResponse{}
	mi := &file_api_proto_audio_audio_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeResponse) ProtoMessage() {}

func (x *TranscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_audio_audio_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeResponse.ProtoReflect.Descriptor instead.
func (*TranscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_audio_audio_proto_rawDescGZIP(), []int{1}
}

func (x *TranscribeResponse) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *TranscribeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_api_proto_audio_audio_proto protoreflect.FileDescriptor

var file_api_proto_audio_audio_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x22, 0x69, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x4a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x84, 0x01, 0x0a, 0x0b,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x41,
	0x55, 0x44, 0x49, 0x4f, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x57, 0x41, 0x56, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x4d, 0x50, 0x33, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x43, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4f, 0x47, 0x47,
	0x10, 0x04, 0x32, 0x58, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x18, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_proto_audio_audio_proto_rawDescOnce sync.Once
	file_api_proto_audio_audio_proto_rawDescData []byte
)

func file_api_proto_audio_audio_proto_rawDescGZIP() []byte {
	file_api_proto_audio_audio_proto_rawDescOnce.Do(func() {
		file_api_proto_audio_audio_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_audio_audio_proto_rawDesc), len(file_api_proto_audio_audio_proto_rawDesc)))
	})
	return file_api_proto_audio_audio_proto_rawDescData
}

var file_api_proto_audio_audio_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_audio_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_proto_audio_audio_proto_goTypes = []any{
	(AudioFormat)(0),           // 0: audio.AudioFormat
	(*TranscribeRequest)(nil),  // 1: audio.TranscribeRequest
	(*TranscribeResponse)(nil), // 2: audio.TranscribeResponse
}
var file_api_proto_audio_audio_proto_depIdxs = []int32{
	0, // 0: audio.TranscribeRequest.audio_format:type_name -> audio.AudioFormat
	1, // 1: audio.AudioService.TranscribeAudio:input_type -> audio.TranscribeRequest
	2, // 2: audio.AudioService.TranscribeAudio:output_type -> audio.TranscribeResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_audio_audio_proto_init() }
func file_api_proto_audio_audio_proto_init() {
	if File_api_proto_audio_audio_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_audio_audio_proto_rawDesc), len(file_api_proto_audio_audio_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_audio_audio_proto_goTypes,
		DependencyIndexes: file_api_proto_audio_audio_proto_depIdxs,
		EnumInfos:         file_api_proto_audio_audio_proto_enumTypes,
		MessageInfos:      file_api_proto_audio_audio_proto_msgTypes,
	}.Build()
	File_api_proto_audio_audio_proto = out.File
	file_api_proto_audio_audio_proto_goTypes = nil
	file_api_proto_audio_audio_proto_depIdxs = nil
}
